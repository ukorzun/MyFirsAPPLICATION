name:  MyGitHubAction-Basics
env:
  APPLICATION_NAME     : "MyFlask"
  DEPLOY_PACKAGE_NAME  : "flask-deploy-ver-${{ github.sha }}"

on: 
 push:
   branches: 
     - master
   
jobs:
  my_testing1:
     runs-on: ubuntu-latest
    
     steps:
       - name: Run a one-line script
         run: echo Hello, World!
       - name: Execute few commands
         run: |
           echo "Hello message1"
           echo "Hello message2"
           echo "Application name: ${{ env.APPLICATION_NAME }}"
       - name: List current Folder
         run: ls -la
       - name: Git clone my repo
         uses: actions/checkout@v1 
       - name: List current Folder
         run: ls -la     
  my_deploy:
      runs-on: ubuntu-latest
      needs: [my_testing1]
      env:
        VAR1 : "This is Job Level Vatiable1"
        VAR2 : "This is Job Level Vatiable2"
      steps:
        - name: Run a one-line script
          run: echo Hello, World!       
        - name: Print env vars
          run : |
             echo "Var1 = ${{ env.VAR1 }}"
             echo "Var2 = ${{ env.VAR2 }}" 
             echo "Var3 = $LOCAL_VAR"
          env:
            LOCAL_VAR: "Local var"
            
        - name: Printing deployemnt package
          run: echo "Deploy package name is ${{ env.DEPLOY_PACKAGE_NAME }}" 
        - name: Lets test some package
          run: aws --version
        - name: Lets test some package1
          run: zip --version  
  api_service:
    needs: check
    if: needs.check.outputs.api_service == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Publish to Registry
      uses: docker/build-push-action@v2
      with:
        context: api_service/
        push: true
        tags: theartofdevel/notes_system.api_service:latest

    - name: Deploy APIService
      uses: dawidd6/action-ansible-playbook@v2
      with:
        playbook: deploy.yml
        directory: api_service/
        key: ${{secrets.KART_SSH_PRIV_KEY}}
        inventory: |
          [all]
          kartservices.com ansible_ssh_port=${{secrets.KART_SSH_PORT}} ansible_ssh_user=${{secrets.KART_SSH_USER}} ansible_become_user=${{secrets.KART_ANSIBLE_BECOME_USER}} ansible_become_password=${{secrets.KART_ANSIBLE_BECOME_PASSWORD}}
        options: |
          --verbose          
         
          
          
     
